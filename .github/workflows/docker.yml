name: Docker Build and Push

# ワークフローの実行名を設定
# ${{ github.actor }}で実行者の名前を表示
run-name: ${{ github.actor }} is building and pushing Docker images 🐳

# 必要な権限を明示的に設定
# contents: read - リポジトリの読み取り権限
# packages: write - Dockerイメージのプッシュに必要
permissions:
  contents: read
  packages: write

# メインブランチへのプッシュ時、または特定のパスが変更された場合に実行
# pathsで変更を監視するファイルを指定
on:
  push:
    branches: [main]
    paths:
      - "back/**" # バックエンドの変更
      - "front/**" # フロントエンドの変更
      - "deployments/docker/**" # Docker設定の変更
      - ".github/workflows/docker.yml" # ワークフローファイルの変更

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Docker Buildxのセットアップ
      # driver-optsでBuildKitの設定を最適化
      # image: 最新のBuildKitイメージを使用
      # network: hostネットワークを使用してビルドを高速化
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host

      # Docker Hubへのログイン
      # シークレットを使用して認証情報を安全に管理
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # イメージのメタデータを抽出
      # タグとラベルの自動生成
      # type=ref: ブランチ名をタグとして使用
      # type=sha: コミットハッシュをタグとして使用
      # type=raw: デフォルトブランチの場合latestタグを追加
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKER_USERNAME }}/university-navi
          tags: |
            type=ref,event=branch
            type=sha,prefix=sha-
            type=raw,value=latest,enable={{is_default_branch}}
          flavor: |
            latest=true

      # テスト用のビルド
      # マルチプラットフォーム対応とキャッシュの最適化
      # load: true - ビルドしたイメージをローカルにロード
      - name: Build and test
        uses: docker/build-push-action@v6
        with:
          context: .
          target: test
          load: true
          cache-from: type=gha,scope=${{ github.workflow }}-${{ github.ref }}
          cache-to: type=gha,mode=max,scope=${{ github.workflow }}-${{ github.ref }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            NODE_ENV=test
            NEXT_PUBLIC_API_URL=http://localhost:8080/api

      # 本番用のビルドとプッシュ
      # マルチプラットフォーム対応とキャッシュの最適化
      # push: true - ビルドしたイメージをDocker Hubにプッシュ
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ github.workflow }}-${{ github.ref }}
          cache-to: type=gha,mode=max,scope=${{ github.workflow }}-${{ github.ref }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            NODE_ENV=production
            NEXT_PUBLIC_API_URL=http://localhost:8080/api
