# ビルドステージ
FROM golang:1.24.2-alpine AS builder

# ビルド時の引数
ARG BUILDKIT_INLINE_CACHE=1
ARG GO_VERSION=1.24.2
ARG CGO_ENABLED=0
ARG GOOS=linux
ARG GOARCH=amd64

# セキュリティ設定
RUN apk add --no-cache ca-certificates tzdata

# 作業ディレクトリの設定
WORKDIR /app

# 依存関係のコピーとインストール
COPY go.mod go.sum ./
RUN go mod download

# ソースコードのコピー
COPY . .

# ビルド
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -o main ./cmd/api

# 実行ステージ
FROM alpine:latest

# セキュリティ設定
RUN apk add --no-cache ca-certificates tzdata

WORKDIR /app

# ビルドしたバイナリをコピー
COPY --from=builder /app/main .

# 実行ユーザーの設定
USER nobody

# ヘルスチェック
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD ["wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]

# ポートの公開
EXPOSE 8080

# アプリケーションの実行
CMD ["./main"]
