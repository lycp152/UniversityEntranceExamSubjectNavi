# ビルドステージ
FROM node:22-alpine AS builder

# ビルド時の引数
ARG BUILDKIT_INLINE_CACHE=1
ARG NODE_VERSION=22
ARG PNPM_VERSION=10

# セキュリティ設定
RUN apk add --no-cache ca-certificates tzdata

# 作業ディレクトリの設定
WORKDIR /app

# pnpmのインストール
RUN npm install -g pnpm@${PNPM_VERSION}

# 依存関係のコピーとインストール
COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile

# ソースコードのコピー
COPY . .

# ビルド
RUN pnpm build

# 実行ステージ
FROM nginx:alpine

# セキュリティ設定
RUN apk add --no-cache ca-certificates tzdata && \
    rm -rf /etc/nginx/conf.d/* && \
    mkdir -p /var/cache/nginx /var/run

# ビルドしたファイルをコピー
COPY --from=builder /app/dist /usr/share/nginx/html

# nginx設定ファイルのコピー
COPY nginx.conf /etc/nginx/conf.d/default.conf

# セキュリティヘッダーの設定
RUN echo "server_tokens off;" >> /etc/nginx/nginx.conf

# ヘルスチェック
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD ["wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]

# ポートの公開
EXPOSE 80

# nginxの起動
CMD ["nginx", "-g", "daemon off;"]
